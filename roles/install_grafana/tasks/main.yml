---

# - name: Install dependencies
#   apt:
#     name: "{{item}}"
#     state: present
#     update_cache: yes
#   loop:
#     - apt-transport-https
#     - ca-certificates
#     - curl
#     - gnupg
#     - lsb-release


- name: Add apt key
  ansible.builtin.include_role:
    name: ndg.linux_misc.add_apt_keys
  vars:
    - apt_keys: "https://packages.grafana.com/gpg.key"

# - name: Get linux release codename
#   shell: "echo $(lsb_release -cs)"
#   register: codename

- name: Add grafana repository to apt
  apt_repository:
    repo: deb https://packages.grafana.com/enterprise/deb stable main
    state: present

- name: Run apt get update
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600

- name: Install grafana
  apt:
    name: grafana-enterprise
    state: latest
    update_cache: yes

- name: Set default admin password
  ansible.builtin.lineinfile:
    path: /etc/grafana/grafana.ini
    regexp: '^;admin_password ='
    line: "admin_password = {{ ADMIN_PASSWORD }}"
    state: present

- name: debug value
  ansible.builtin.debug:
    var: LDAP_SERVER_IP

- name: Enable LDAP authentication
  ansible.builtin.lineinfile:
    insertafter: ^\#* Auth LDAP
    path: /etc/grafana/grafana.ini
    regexp: '^\;enabled \= false'
    line: 'enabled = true'
    state: present
  when: ENABLE_GRAFANA_LDAP_AUTH

- name: Get certificate from LDAP server
  shell:
    cmd: openssl s_client -connect {{ LDAP_SERVER_IP }}:389 -starttls ldap -showcerts < /dev/null | openssl x509 -text | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p'
  register: certificate_value

- name: Save LDAP server certificate
  ansible.builtin.copy:
    dest: "{{ CERTS_LOCATION }}/{{ LDAP_TLS_CRT_FILENAME }}"
    content: "{{certificate_value.stdout}}"

- name: Template Grafana LDAP configuration
  ansible.builtin.template:
    src: ldap_config.j2
    dest: /etc/grafana/ldap.toml

- name: Create proviioning datasource
  ansible.builtin.copy:
    dest: '/etc/grafana/provisioning/datasources/manager-node-prometheus.yaml'
    content: "{{ DATASOURCE }}"
  when: DATASOURCE

- name: Make sure grafana is started
  service:
    name: grafana-server
    state: restarted
    enabled: yes


#ADD PROMETHEUS AS DATASOURCE
# Click on the Grafana logo to open the sidebar.
# Click on “Data Sources” in the sidebar.
# Choose “Add New”.
# Select “Prometheus” as the data source.
# Set the Prometheus server URL (in our case: http://localhost:9090/)
# Click “Add” to test the connection and to save the new data source.