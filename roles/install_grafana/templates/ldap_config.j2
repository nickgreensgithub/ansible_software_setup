# To troubleshoot and get more log info enable ldap debug logging in grafana.ini
# [log]
# filters = ldap:debug

[[servers]]
# Ldap server host (specify multiple hosts space separated)
host = "{{ LDAP_DOMAIN_URI }}"
# Default port is 389 or 636 if use_ssl = true
port = 389
# Set to true if LDAP server should use an encrypted TLS connection (either with STARTTLS or LDAPS)
use_ssl = false
# If set to true, use LDAP with STARTTLS instead of LDAPS
start_tls = false
# set to true if you want to skip ssl cert validation
ssl_skip_verify = false
# set to the path to your root CA certificate or leave unset to use system defaults
#root_ca_cert = "{{ CERTS_LOCATION }}/{{ LDAP_TLS_CA_CRT_FILENAME }}"
# Authentication against LDAP servers requiring client certificates
client_cert = "{{ CERTS_LOCATION }}/{{ LDAP_TLS_CRT_FILENAME }}"
#client_key = "{{ CERTS_LOCATION }}/{{ LDAP_TLS_KEY_FILENAME }}"

# Search user bind dn
bind_dn = "cn={{ LDAP_DEFAULT_BIND_CN }},{{ LDAP_BASE_DN }}"

# Search user bind password
# If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""
bind_password = '{{ LDAP_READONLY_USER_PASSWORD }}'

# User search filter, for example "(cn=%s)" or "(sAMAccountName=%s)" or "(uid=%s)"
search_filter = "(uid=%s)"

# An array of base dns to search through
search_base_dns = ["{{ LDAP_BASE_DN }}"]

## For Posix or LDAP setups that does not support member_of attribute you can define the below settings
## Please check grafana LDAP docs for examples
group_search_filter = "(&(objectClass=posixGroup)(memberUid=%s))"
group_search_base_dns = ["ou={{ LDAP_GROUP_SEARCH_OU }},{{LDAP_BASE_DN}}"]
group_search_filter_user_attribute = "uid"

# Specify names of the ldap attributes your ldap uses
[servers.attributes]
#name = "givenName"
#surname = "sn"
username = "uid"
#member_of = "memberOf"
#email =  "email"

# Map ldap groups to grafana org roles
[[servers.group_mappings]]
group_dn = "cn={{ LDAP_ADMIN_SEARCH_OU }},ou={{ LDAP_GROUP_SEARCH_OU }},{{ LDAP_BASE_DN}}"
org_role = "Admin"
# To make user an instance admin  (Grafana Admin) uncomment line below
# grafana_admin = true
# The Grafana organization database id, optional, if left out the default org (id 1) will be used
# org_id = 1

{# [[servers.group_mappings]]
group_dn = "cn=readonly,ou=groups,{{ LDAP_BASE_DN}}"
org_role = "Editor" #}

[[servers.group_mappings]]
# If you want to match all (or no ldap groups) then you can use wildcard
group_dn = "*"
org_role = "Viewer"